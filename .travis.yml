dist: trusty
language: rust
sudo: true

rust:
  - stable
  - beta
  - nightly

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  global:
  - CARGO_TERM_COLOR=always

matrix:
  allow_failures:
    - rust: nightly
  include:
    - os: linux
      rust: 1.40.0
      env: ARCH=x86_64

    - os: linux
      rust: stable
      env: ARCH=x86_64

    - os: linux
      rust: beta
      env: ARCH=x86_64

    - os: linux
      rust: nightly
      env: ARCH=x86_64

    - os: osx
      osx_image: xcode11.3
      rust: stable
      env: ARCH=x86_64

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev

jobs:
  allow_failures:
    - rust: [ nightly ]
  fast_finish: true

install:
  - rustc -vV
  - cargo -vV

  - mkdir -p ~/.cargo/bin
  - sh src/install_kcov.sh
  - export PATH=$HOME/.local/bin:$HOME/.cargo/bin:$HOME/Library/Python/2.7/bin:$PATH
  - export RUSTFLAGS="-C link-dead-code"
  - kcov --version

  - if [ $TRAVIS_OS_NAME = osx ]; then brew unlink python2 && brew unlink python3; fi

before_script:
  - rustup component add rustfmt

script:
  - cargo build --verbose
  - cargo test --verbose
  - cargo fmt -- --check
  - if [ $TRAVIS_OS_NAME = linux ]; then cargo run -- kcov --verbose --no-clean-rebuild --lib --coveralls; fi
